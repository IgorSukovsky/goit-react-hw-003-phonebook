{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","id","uuid","name","number","handleChange","evt","setState","target","value","onSubmit","preventDefault","props","handleSubmit","className","styles","form","this","title","onChange","inputContact","type","pattern","required","placeholder","btn","Component","Filter","filter","block","htmlFor","input","ContactsListItem","item","handleDelete","textContent","onClick","ContactsList","items","ul","map","Contacts","prevState","term","some","toLowerCase","alert","newTodo","console","log","localStorage","getItem","parsedItems","JSON","parse","prevProps","setItem","stringify","formattedFilter","trim","filteredItems","includes","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,IAAM,6BAA6B,YAAc,uC,mBCAnED,EAAOC,QAAU,CAAC,GAAK,0B,kBCAvBD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,aAAe,kCAAkC,IAAM,2B,2KCIvIC,E,4MACJC,MAAQ,CACNC,GAAIC,cACJC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GACd,EAAKC,SAAL,eAAiBD,EAAIE,OAAOL,KAAOG,EAAIE,OAAOC,S,EAGhDC,SAAW,SAACJ,GACVA,EAAIK,iBAEJ,EAAKC,MAAMC,aAAa,EAAKb,OAE7B,EAAKO,SAAS,CAAEJ,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,mCACE,uBAAMU,UAAWC,IAAOC,KAAMN,SAAUO,KAAKP,SAA7C,UACE,sBAAMI,UAAWC,IAAOG,MAAxB,kBACA,uBACEC,SAAUF,KAAKZ,aACfS,UAAWC,IAAOK,aAClBX,MAAOQ,KAAKjB,MAAMG,KAClBkB,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRJ,MAAM,kcACNK,UAAQ,EACRC,YAAY,wBAEd,sBAAMV,UAAWC,IAAOG,MAAxB,oBACA,uBACEJ,UAAWC,IAAOK,aAClBjB,KAAK,SACLkB,KAAK,MACLF,SAAUF,KAAKZ,aACfI,MAAOQ,KAAKjB,MAAMI,OAClBkB,QAAQ,yFACRJ,MAAM,giBACNK,UAAQ,EACRC,YAAY,wBAEd,wBAAQV,UAAWC,IAAOU,IAAKJ,KAAK,SAApC,kC,GA/CgBK,aA2DX3B,I,gBCxCA4B,EArBA,SAAC,GAA8B,IAA5BtB,EAA2B,EAA3BA,aAAcuB,EAAa,EAAbA,OAC9B,OACE,sBAAKd,UAAWC,IAAOc,MAAvB,UACE,uBAAOf,UAAWC,IAAOG,MAAOY,QAAQ,SAAxC,oCACA,uBACE7B,GAAG,SACHE,KAAK,SACLkB,KAAK,OACLP,UAAWC,IAAOgB,MAClBZ,SAAUd,EACVI,MAAOmB,Q,iBCaAI,EAxBU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aACxB/B,EAAiB8B,EAAjB9B,KAAMC,EAAW6B,EAAX7B,OAEd,OACE,6BACE,sBAAKU,UAAWC,IAAOoB,YAAvB,UACE,iCACGhC,EADH,KACWC,KAEX,wBAAQU,UAAWC,IAAOU,IAAKW,QAASF,EAAxC,qB,iBCeOG,EAtBM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOJ,EAAmB,EAAnBA,aAC7B,OACE,mCACE,oBAAIpB,UAAWC,IAAOwB,GAAtB,SACGD,EAAME,KAAI,SAACP,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAc,kBAAMA,EAAaD,EAAKhC,MAFjCgC,EAAKhC,YCJhBwC,E,4MACJzC,MAAQ,CACNsC,MAAO,GACPV,OAAQ,I,EAqBVM,aAAe,SAACjC,GACd,EAAKM,UAAS,SAACmC,GAAD,MAAgB,CAC5BJ,MAAOI,EAAUJ,MAAMV,QAAO,SAACK,GAAD,OAAUA,EAAKhC,KAAOA,U,EAIxDI,aAAe,SAACC,GACd,EAAKC,SAAL,eAAiBD,EAAIE,OAAOL,KAAOG,EAAIE,OAAOC,S,EAGhDI,aAAe,SAAC8B,GACd,GAAKA,EAQL,GAHoB,EAAK3C,MAAMsC,MAAMM,MACnC,SAACX,GAAD,OAAUA,EAAK9B,KAAK0C,gBAAkBF,EAAKxC,KAAK0C,iBAGhDC,MAAM,+CAAcH,EAAKxC,KAAO,yFADlC,CAKA,IAAM4C,EAAU,CACd9C,GAAIC,cACJC,KAAMwC,EAAKxC,KACXC,OAAQuC,EAAKvC,QAGf,EAAKG,UAAS,SAACmC,GAEb,MAAO,CAAEJ,MADK,CAAIS,GAAJ,mBAAgBL,EAAUJ,iBAnBxCQ,MAAM,wI,uDA7BV,WACEE,QAAQC,IAAI,uBACZ,IAAMX,EAAQY,aAAaC,QAAQ,SACnC,GAAIb,EAAO,CACT,IAAMc,EAAcC,KAAKC,MAAMhB,GAC/BrB,KAAKV,SAAS,CAAE+B,MAAOc,O,gCAI3B,SAAmBG,EAAWb,GAC5BM,QAAQC,IAAI,wBACRP,EAAUJ,QAAUrB,KAAKjB,MAAMsC,OACjCY,aAAaM,QAAQ,QAASH,KAAKI,UAAUxC,KAAKjB,MAAMsC,U,oBAyC5D,WACE,MAA0BrB,KAAKjB,MAAvBsC,EAAR,EAAQA,MAAOV,EAAf,EAAeA,OACT8B,EAAkB9B,EAAOiB,cAAcc,OACvCC,EAAgBtB,EAAMV,QAAO,SAACK,GAAD,OACjCA,EAAK9B,KAAK0C,cAAcgB,SAASH,MAGnC,OACE,sBAAK5C,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,CAAaD,aAAcI,KAAKJ,eAChC,0CACA,gCACE,cAAC,EAAD,CAAQe,OAAQA,EAAQvB,aAAcY,KAAKZ,eAC3C,cAAC,EAAD,CACEiC,MAAOsB,EACP1B,aAAcjB,KAAKiB,yB,GA5ERR,aAoFRe,I,MCpFfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BtE,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.7b368355.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__2vqga\",\"textContent\":\"ContactListItem_textContent__3gBY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__3sobX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__GdV_7\",\"title\":\"ContactForm_title__2V5Pz\",\"inputContact\":\"ContactForm_inputContact__2ppVx\",\"btn\":\"ContactForm_btn__2CwVz\"};","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    id: uuid(),\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n\n    this.props.handleSubmit(this.state);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={styles.form} onSubmit={this.onSubmit}>\n          <span className={styles.title}>Name</span>\n          <input\n            onChange={this.handleChange}\n            className={styles.inputContact}\n            value={this.state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            placeholder=\"имя:\"\n          />\n          <span className={styles.title}>Number</span>\n          <input\n            className={styles.inputContact}\n            name=\"number\"\n            type=\"tel\"\n            onChange={this.handleChange}\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            placeholder=\"тел:\"\n          />\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ handleChange, filter }) => {\n  return (\n    <div className={styles.block}>\n      <label className={styles.title} htmlFor=\"filter\">Find contacts by name:</label>\n      <input\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        className={styles.input}\n        onChange={handleChange}\n        value={filter}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactListItem.module.css\";\nconst ContactsListItem = ({ item, handleDelete}) => {\n  const { name, number } = item;\n\n  return (\n    <li>\n      <div className={styles.textContent}>\n        <span>\n          {name}: {number}\n        </span>\n        <button className={styles.btn} onClick={handleDelete}>X</button>\n      </div>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsListItem;\n","import PropTypes from \"prop-types\";\nimport ContactsListItem from \"../ContactListItem/ContactListItem\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactsList = ({ items, handleDelete }) => {\n  return (\n    <>\n      <ul className={styles.ul}>\n        {items.map((item) => (\n          <ContactsListItem\n            key={item.id}\n            item={item}\n            handleDelete={() => handleDelete(item.id)}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\n    .isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ContactForm from \"./components/ContactForm//ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactList/ContactList\";\n\nclass Contacts extends Component {\n  state = {\n    items: [],\n    filter: \"\",\n  };\n\n  // -------localStorege\n  componentDidMount() {\n    console.log(\"[componentDidMount]\");\n    const items = localStorage.getItem(\"items\");\n    if (items) {\n      const parsedItems = JSON.parse(items);\n      this.setState({ items: parsedItems });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"[componentDidUpdate]\");\n    if (prevState.items !== this.state.items) {\n      localStorage.setItem(\"items\", JSON.stringify(this.state.items));\n    }\n  }\n  // -------localStorege the end\n\n  handleDelete = (id) => {\n    this.setState((prevState) => ({\n      items: prevState.items.filter((item) => item.id !== id),\n    }));\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  handleSubmit = (term) => {\n    if (!term) {\n      alert(\"Поле не может быть пустым!\");\n      return;\n    }\n\n    const isDuplicate = this.state.items.some(\n      (item) => item.name.toLowerCase() === term.name.toLowerCase()\n    );\n    if (isDuplicate) {\n      alert(\"Контакт: \" + term.name + \" уже существует \");\n      return;\n    }\n\n    const newTodo = {\n      id: uuid(),\n      name: term.name,\n      number: term.number,\n    };\n\n    this.setState((prevState) => {\n      const newItems = [newTodo, ...prevState.items];\n      return { items: newItems };\n    });\n  };\n\n  render() {\n    const { items, filter } = this.state;\n    const formattedFilter = filter.toLowerCase().trim();\n    const filteredItems = items.filter((item) =>\n      item.name.toLowerCase().includes(formattedFilter)\n    );\n\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        <h2>Contacts</h2>\n        <div>\n          <Filter filter={filter} handleChange={this.handleChange} />\n          <ContactsList\n            items={filteredItems}\n            handleDelete={this.handleDelete}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__1VBaR\",\"title\":\"Filter_title__c_AKi\",\"input\":\"Filter_input__20Yiz\"};"],"sourceRoot":""}